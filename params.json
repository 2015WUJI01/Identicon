{"name":"Identicon","tagline":"Generate awesome and unique identicons with beautiful colors","body":"# Identicon generator for PHP\r\n\r\n[![Build Status](https://secure.travis-ci.org/yzalis/Identicon.png)](http://travis-ci.org/yzalis/Identicon)\r\n\r\n**Identicon** is a library which generate an [identicon](http://en.wikipedia.org/wiki/Identicon) image based on a string.\r\n\r\nHere is some examples of awesome results!\r\n\r\n![Identicon example #1](doc/benjaminAtYzalisDotCom.png)&nbsp;&nbsp;\r\n![Identicon example #2](doc/Benjamin.png)&nbsp;&nbsp;\r\n![Identicon example #3](doc/8.8.8.8.png)&nbsp;&nbsp;\r\n![Identicon example #4](doc/8.8.4.4.png)&nbsp;&nbsp;\r\n![Identicon example #5](doc/yzalis.png)\r\n\r\n## Installation\r\n\r\nThe recommended way to install Identicon is through composer.\r\n\r\nJust create a `composer.json` file for your project:\r\n\r\n``` json\r\n{\r\n    \"require\": {\r\n        \"yzalis/identicon\": \"*\"\r\n    }\r\n}\r\n```\r\n\r\nAnd run these two commands to install it:\r\n\r\n``` bash\r\n$ wget http://getcomposer.org/composer.phar\r\n$ php composer.phar install\r\n```\r\n\r\nNow you can add the autoloader, and you will have access to the library:\r\n\r\n``` php\r\n<?php\r\n\r\nrequire 'vendor/autoload.php';\r\n```\r\n\r\nIf you don't use either **Composer** or a _ClassLoader_ in your application, just require the provided autoloader:\r\n\r\n``` php\r\n<?php\r\n\r\nrequire_once 'src/autoload.php';\r\n```\r\n\r\nYou're done.\r\n\r\n\r\n## Usage\r\n\r\nImages are generated in PNG format with transparent background.\r\n\r\nThe string can be an email, an IP address, a username, an ID or something else.\r\n\r\n### Generate an identicon\r\n\r\nCreate a new ```Identicon``` object.\r\n\r\n``` php\r\n$identicon = new Identicon();\r\n\r\n```\r\n\r\nThen you can generate and display an identicon image\r\n\r\n``` php\r\n$identicon->displayImage('foo');\r\n```\r\n\r\nor generate and get the image data.\r\n\r\n``` php\r\n$imageData = $identicon->getImageData('bar');\r\n```\r\n\r\n\r\n### Change the size\r\n\r\nBy default the size will be 64 pixels. If you want to change the image size just add a secondary parameter. 512 x 512px in this example.\r\n\r\n``` php\r\n$identicon->displayImage('foo', 512);\r\n```\r\n\r\n### Color\r\n\r\nThe color is automaticaly generated according to the string hash but you can chose to specify a color by adding a third argument.\r\n\r\nColor can be an hexadecimal with 6 characters\r\n\r\n``` php\r\n$identicon->displayImage('bar', 64, 'A87EDF');\r\n```\r\n\r\nor an array with red, green, blue value\r\n\r\n``` php\r\n$identicon->displayImage('foo', 64, array(200, 100, 150));\r\n```\r\n\r\nThat's it!\r\n\r\n## Unit Tests\r\n\r\nTo run unit tests, you'll need and a set of dependencies you can install using Composer:\r\n\r\n```\r\nphp composer.phar install\r\n```\r\n\r\nOnce installed, just launch the following command:\r\n\r\n```\r\nphpunit\r\n```\r\n\r\nEverythings should be ok.\r\n\r\n\r\n## Credits\r\n\r\n* Benjamin Laugueux <benjamin@laugueux.org>\r\n* [All contributors](https://github.com/yzalis/Identicon)\r\n\r\nInspired by Github [blog post](https://github.com/blog/1586-identicons) about Identicon.\r\n\r\n\r\n## License\r\n\r\nIdenticon is released under the MIT License. See the bundled LICENSE file for details.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}